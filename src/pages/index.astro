---
import BaseLayout from '../layouts/BaseLayout.astro';
import Navigation from '../components/layout/Navigation.astro';
import { t, defaultLocale } from '../i18n/utils';

const locale = defaultLocale;
const title = t('home.title', locale);
const description = t('home.subtitle', locale);
---

<BaseLayout title={title} description={description} locale={locale}>
  <Navigation locale={locale} />
  
  <!-- Hero Section -->
  <section class="relative min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 via-white to-purple-50 dark:from-gray-900 dark:via-gray-800 dark:to-purple-900">
    <!-- Background Animation -->
    <div class="absolute inset-0 overflow-hidden">
      <div class="absolute -top-40 -right-40 w-80 h-80 bg-purple-300 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob"></div>
      <div class="absolute -bottom-40 -left-40 w-80 h-80 bg-yellow-300 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-2000"></div>
      <div class="absolute top-40 left-40 w-80 h-80 bg-pink-300 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-4000"></div>
    </div>
    
    <div class="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <div class="animate-fade-in">
        <h1 class="text-4xl md:text-6xl font-bold text-gray-900 dark:text-white mb-6">
          {t('home.hero.title', locale)}
        </h1>
        <p class="text-xl md:text-2xl text-gray-600 dark:text-gray-300 mb-8 max-w-3xl mx-auto">
          {t('home.hero.description', locale)}
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a href="#features" class="btn-primary">
            {t('home.hero.cta', locale)}
            <i class="fas fa-arrow-down ml-2"></i>
          </a>
          <a href="/tools/name-picker" class="btn-secondary">
            {t('tools.namePicker.title', locale)}
            <i class="fas fa-random ml-2"></i>
          </a>
        </div>
      </div>
    </div>
    
    <!-- Scroll Indicator -->
    <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce">
      <i class="fas fa-chevron-down text-2xl text-gray-400"></i>
    </div>
  </section>

  <!-- Features Section -->
  <section id="features" class="py-20 bg-white dark:bg-gray-900">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-16">
        <h2 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">
          {t('home.features.title', locale)}
        </h2>
        <p class="text-xl text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
          {t('home.subtitle', locale)}
        </p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
        <!-- Name Picker Feature -->
        <div class="feature-card group">
          <div class="feature-icon bg-blue-500">
            <i class="fas fa-random text-white text-2xl"></i>
          </div>
          <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-3">
            {t('home.features.namePicker.title', locale)}
          </h3>
          <p class="text-gray-600 dark:text-gray-300 mb-4">
            {t('home.features.namePicker.description', locale)}
          </p>
          <a href="/tools/name-picker" class="feature-link">
            {t('common.start', locale)}
            <i class="fas fa-arrow-right ml-2 group-hover:translate-x-1 transition-transform"></i>
          </a>
        </div>
        
        <!-- Quiz Feature -->
        <div class="feature-card group">
          <div class="feature-icon bg-green-500">
            <i class="fas fa-brain text-white text-2xl"></i>
          </div>
          <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-3">
            {t('home.features.quiz.title', locale)}
          </h3>
          <p class="text-gray-600 dark:text-gray-300 mb-4">
            {t('home.features.quiz.description', locale)}
          </p>
          <a href="/quiz" class="feature-link">
            {t('common.start', locale)}
            <i class="fas fa-arrow-right ml-2 group-hover:translate-x-1 transition-transform"></i>
          </a>
        </div>
        
        <!-- Slot Simulator Feature -->
        <div class="feature-card group">
          <div class="feature-icon bg-purple-500">
            <i class="fas fa-dice text-white text-2xl"></i>
          </div>
          <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-3">
            {t('home.features.slot.title', locale)}
          </h3>
          <p class="text-gray-600 dark:text-gray-300 mb-4">
            {t('home.features.slot.description', locale)}
          </p>
          <a href="/tools/slot-simulator" class="feature-link">
            {t('common.start', locale)}
            <i class="fas fa-arrow-right ml-2 group-hover:translate-x-1 transition-transform"></i>
          </a>
        </div>
      </div>
    </div>
  </section>

  <!-- Stats Section -->
  <section class="py-20 bg-gray-50 dark:bg-gray-800">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="grid grid-cols-2 md:grid-cols-4 gap-8 text-center">
        <div class="stat-item">
          <div class="text-3xl md:text-4xl font-bold text-blue-600 dark:text-blue-400 mb-2" data-count="1000">0</div>
          <div class="text-gray-600 dark:text-gray-300">Active Users</div>
        </div>
        <div class="stat-item">
          <div class="text-3xl md:text-4xl font-bold text-green-600 dark:text-green-400 mb-2" data-count="50">0</div>
          <div class="text-gray-600 dark:text-gray-300">Tools Available</div>
        </div>
        <div class="stat-item">
          <div class="text-3xl md:text-4xl font-bold text-purple-600 dark:text-purple-400 mb-2" data-count="3">0</div>
          <div class="text-gray-600 dark:text-gray-300">Languages</div>
        </div>
        <div class="stat-item">
          <div class="text-3xl md:text-4xl font-bold text-red-600 dark:text-red-400 mb-2" data-count="99">0</div>
          <div class="text-gray-600 dark:text-gray-300">Satisfaction %</div>
        </div>
      </div>
    </div>
  </section>

  <!-- Footer -->
  <footer class="bg-gray-900 text-white py-12">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
        <div class="col-span-1 md:col-span-2">
          <div class="flex items-center space-x-2 text-xl font-bold mb-4">
            <i class="fas fa-graduation-cap text-blue-400"></i>
            <span>EduTools</span>
          </div>
          <p class="text-gray-300 mb-4">
            {t('home.hero.description', locale)}
          </p>
          <div class="flex space-x-4">
            <a href="#" class="text-gray-400 hover:text-white transition-colors">
              <i class="fab fa-twitter"></i>
            </a>
            <a href="#" class="text-gray-400 hover:text-white transition-colors">
              <i class="fab fa-facebook"></i>
            </a>
            <a href="#" class="text-gray-400 hover:text-white transition-colors">
              <i class="fab fa-instagram"></i>
            </a>
          </div>
        </div>
        
        <div>
          <h3 class="font-semibold mb-4">{t('nav.tools', locale)}</h3>
          <ul class="space-y-2">
            <li><a href="/tools/name-picker" class="text-gray-300 hover:text-white transition-colors">{t('tools.namePicker.title', locale)}</a></li>
            <li><a href="/tools/slot-simulator" class="text-gray-300 hover:text-white transition-colors">{t('slot.title', locale)}</a></li>
          </ul>
        </div>
        
        <div>
          <h3 class="font-semibold mb-4">{t('nav.quiz', locale)}</h3>
          <ul class="space-y-2">
            <li><a href="/quiz/iq" class="text-gray-300 hover:text-white transition-colors">{t('quiz.iq.title', locale)}</a></li>
            <li><a href="/quiz/mbti" class="text-gray-300 hover:text-white transition-colors">{t('quiz.mbti.title', locale)}</a></li>
            <li><a href="/quiz/trivia" class="text-gray-300 hover:text-white transition-colors">{t('quiz.trivia.title', locale)}</a></li>
          </ul>
        </div>
      </div>
      
      <div class="border-t border-gray-800 mt-8 pt-8 text-center text-gray-400">
        <p>&copy; 2024 EduTools. All rights reserved.</p>
      </div>
    </div>
  </footer>
</BaseLayout>

<style>
  .feature-card {
    @apply bg-white dark:bg-gray-800 p-8 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1;
  }
  
  .feature-icon {
    @apply w-16 h-16 rounded-lg flex items-center justify-center mb-6 mx-auto;
  }
  
  .feature-link {
    @apply inline-flex items-center text-blue-600 dark:text-blue-400 font-medium hover:text-blue-700 dark:hover:text-blue-300 transition-colors;
  }
  
  .stat-item {
    @apply animate-fade-in;
  }
  
  .animation-delay-2000 {
    animation-delay: 2s;
  }
  
  .animation-delay-4000 {
    animation-delay: 4s;
  }
</style>

<script>
  // Animate counters
  function animateCounters() {
    const counters = document.querySelectorAll('[data-count]');
    
    counters.forEach(counter => {
      const target = parseInt(counter.getAttribute('data-count') || '0');
      const duration = 2000;
      const step = target / (duration / 16);
      let current = 0;
      
      const timer = setInterval(() => {
        current += step;
        if (current >= target) {
          current = target;
          clearInterval(timer);
        }
        counter.textContent = Math.floor(current).toString();
      }, 16);
    });
  }
  
  // Intersection Observer for animations
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animate-fade-in');
        if (entry.target.querySelector('[data-count]')) {
          animateCounters();
        }
      }
    });
  });
  
  document.addEventListener('DOMContentLoaded', () => {
    // Observe stat items
    document.querySelectorAll('.stat-item').forEach(item => {
      observer.observe(item);
    });
    
    // Smooth scrolling for anchor links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
          target.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      });
    });
  });
</script>
